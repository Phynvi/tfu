/*
 * Decompiled with CFR 0.146.
 */
package com.jagex.jnibindings.runetek6.jagbullet;

import com.jagex.maths.Vector3;
import java.util.ArrayList;

public class B45 {
    public float a;
    public boolean aa;
    public float ab;
    public float ac;
    public Vector3 ad;
    public Vector3 ae;
    public ArrayList af;
    public float ag;
    public float ah;
    public ArrayList ai = new ArrayList();
    public float aj;
    public float ak;
    public ArrayList al = new ArrayList();
    public boolean am;
    public boolean an;
    public boolean ao;
    public boolean ap;
    public float aq;
    public float ar;
    public boolean as;
    public float at;
    public float au;
    public ArrayList av;
    public float aw;
    public float ax;
    public Vector3 ay;
    public float az;
    public float b;
    public Vector3 ba;
    public Vector3 bb;
    public float bc = 0.9f;
    public float bd;
    public float be = 0.0f;
    public float bf;
    public Vector3 bg;
    public float bh = 1.0f;
    public Vector3 bi;
    public float bj = -0.7853982f;
    public float bk = 0.0f;
    public float bl = -1.5707964f;
    public Vector3 bm;
    public Vector3 bn;
    public float bo = -1.5707964f;
    public float bp = 0.0f;
    public float bq = -4.712389f;
    public float br;
    public Vector3 bt;
    public Vector3 bu;
    public float bv;
    public float bw = -3.1415927f;
    public float bx;
    public float by;
    public float bz = 0.2f;
    public float c;
    public float d;
    public float e;
    public float f;
    public int g;
    public float h;
    public float i;
    public float j;
    public float k;
    public float l;
    public float m;
    public float n;
    public float o;
    public float p;
    public float q;
    public float r;
    public float s;
    public float t;
    public float u;
    public float v;
    public float w;
    public float x;
    public float y;
    public float z;

    public B45(B45 b45) {
        this.af = new ArrayList();
        this.av = new ArrayList();
        this.g = b45.g;
        this.d = b45.d;
        this.q = b45.q;
        this.j = b45.j;
        this.e = b45.e;
        this.h = b45.h;
        this.s = b45.s;
        this.b = b45.b;
        this.l = b45.l;
        this.w = b45.w;
        this.r = b45.r;
        this.v = b45.v;
        this.y = b45.y;
        this.p = b45.p;
        this.x = b45.x;
        this.u = b45.u;
        this.z = b45.z;
        this.t = b45.t;
        this.m = b45.m;
        this.n = b45.n;
        this.t = b45.t;
        this.m = b45.m;
        this.o = b45.o;
        this.a = b45.a;
        this.f = b45.f;
        this.c = b45.c;
        this.az = b45.az;
        this.ah = b45.ah;
        this.ag = b45.ag;
        this.ai = (ArrayList)b45.ai.clone();
        this.al = (ArrayList)b45.al.clone();
        this.af = (ArrayList)b45.af.clone();
        this.av = (ArrayList)b45.av.clone();
        this.aq = b45.aq;
        this.ap = b45.ap;
        this.ao = b45.ao;
        this.aa = b45.aa;
        this.an = b45.an;
        this.am = b45.am;
        this.as = b45.as;
        this.ac = b45.ac;
        this.at = b45.at;
        this.ab = b45.ab;
        this.aw = b45.aw;
        this.ar = b45.ar;
        this.ax = b45.ax;
        this.au = b45.au;
        this.aj = b45.aj;
        this.ak = b45.ak;
        this.ay = b45.ay;
        this.ad = b45.ad;
        this.ae = b45.ae;
        this.bx = b45.bx;
        this.by = b45.by;
        this.br = b45.br;
        this.bv = b45.bv;
        this.bd = b45.bd;
        this.bm = b45.bm;
        this.bq = b45.bq;
        this.bo = b45.bo;
        this.bl = b45.bl;
        this.bw = b45.bw;
        this.bj = b45.bj;
        this.bk = b45.bk;
        this.bh = b45.bh;
        this.bp = b45.bp;
        this.bf = b45.bf;
        this.bn = b45.bn;
        this.bb = b45.bb;
        this.ba = b45.ba;
        this.bi = b45.bi;
        this.bt = b45.bt;
        this.bz = b45.bz;
        this.bc = b45.bc;
        this.bg = b45.bg;
        this.bu = b45.bu;
        this.be = b45.be;
    }

    public String toString() {
        int n;
        StringBuilder stringBuilder = new StringBuilder(2000);
        stringBuilder.append("--------\n");
        stringBuilder.append("\nnumWheels: ");
        stringBuilder.append(this.g);
        stringBuilder.append("\nsuspensionStiffness: ");
        stringBuilder.append(this.d);
        stringBuilder.append("\nsuspensionCompression: ");
        stringBuilder.append(this.q);
        stringBuilder.append("\nsuspensionDamping: ");
        stringBuilder.append(this.j);
        stringBuilder.append("\nextraWheelRaycastDistance: ");
        stringBuilder.append(this.h);
        stringBuilder.append("\nwheelSpinRateOnSkid: ");
        stringBuilder.append(this.s);
        stringBuilder.append("\nmaxSuspensionTravelCm: ");
        stringBuilder.append(this.b);
        stringBuilder.append("\nmaxSuspensionForce: ");
        stringBuilder.append(this.e);
        stringBuilder.append("\nfrontStaticFriction: ");
        stringBuilder.append(this.l);
        stringBuilder.append("\nfrontDynamicFriction: ");
        stringBuilder.append(this.w);
        stringBuilder.append("\nfrontForwardToLateralFrictionRatio: ");
        stringBuilder.append(this.r);
        stringBuilder.append("\nrearStaticFriction: ");
        stringBuilder.append(this.v);
        stringBuilder.append("\nrearDynamicFriction: ");
        stringBuilder.append(this.y);
        stringBuilder.append("\nrearForwardToLateralFrictionRatio: ");
        stringBuilder.append(this.p);
        stringBuilder.append("\nwheelRadius: ");
        stringBuilder.append(this.x);
        stringBuilder.append("\nwheelWidth: ");
        stringBuilder.append(this.u);
        stringBuilder.append("\nrollInfluence: ");
        stringBuilder.append(this.z);
        stringBuilder.append("\nvisualRollFactor: ");
        stringBuilder.append(this.t);
        stringBuilder.append("\nvisualRollSpeed: ");
        stringBuilder.append(this.m);
        stringBuilder.append("\nvisualRollMaxAngle: ");
        stringBuilder.append(this.n);
        stringBuilder.append("\nvisualPitchFactor: ");
        stringBuilder.append(this.k);
        stringBuilder.append("\nvisualPitchSpeed: ");
        stringBuilder.append(this.i);
        stringBuilder.append("\nvisualPitchMaxAngle: ");
        stringBuilder.append(this.o);
        stringBuilder.append("\naxlePointX_Crf: ");
        stringBuilder.append(this.a);
        stringBuilder.append("\naxlePointY_Crf: ");
        stringBuilder.append(this.f);
        stringBuilder.append("\naxlePointZ_Crf: ");
        stringBuilder.append(this.c);
        stringBuilder.append("\ntopSpeed: ");
        stringBuilder.append(this.az);
        stringBuilder.append("\nreverseTopSpeed: ");
        stringBuilder.append(this.ah);
        stringBuilder.append("\nenginePower: ");
        stringBuilder.append(this.ag);
        stringBuilder.append("\nAccelerations(speed) : ");
        for (n = 0; n < this.ai.size(); ++n) {
            stringBuilder.append("\n   acc(" + this.al.get(n) + ") = " + this.ai.get(n));
        }
        stringBuilder.append("\nReverse accelerations(speed) : ");
        for (n = 0; n < this.af.size(); ++n) {
            stringBuilder.append("\n   acc(" + this.av.get(n) + ") = " + this.af.get(n));
        }
        stringBuilder.append("\nmaxTorqueAtLowSpeed: ");
        stringBuilder.append(this.aq);
        stringBuilder.append("\nfrontAxleIsDriving: ");
        stringBuilder.append(this.ap);
        stringBuilder.append("\nrearAxleIsDriving: ");
        stringBuilder.append(this.ao);
        stringBuilder.append("\nfrontAxleIsBraking: ");
        stringBuilder.append(this.aa);
        stringBuilder.append("\nrearAxleIsBraking: ");
        stringBuilder.append(this.an);
        stringBuilder.append("\nfrontAxleIsHandBraking: ");
        stringBuilder.append(this.am);
        stringBuilder.append("\nrearAxleIsHandBraking: ");
        stringBuilder.append(this.as);
        stringBuilder.append("\nrollingFriction: ");
        stringBuilder.append(this.ac);
        stringBuilder.append("\ndumbDownSkiddingEffectStrength: ");
        stringBuilder.append(this.at);
        stringBuilder.append("\ndesiredSkidToSteerAnglesRatio: ");
        stringBuilder.append(this.ab);
        stringBuilder.append("\nwheelFrictionConstraintStabilityTweak: ");
        stringBuilder.append(this.aw);
        stringBuilder.append("\nlowEndSteeringFullLockAngle: ");
        stringBuilder.append(this.ar);
        stringBuilder.append("\nhighEndSteeringSpeed: ");
        stringBuilder.append(this.ax);
        stringBuilder.append("\nhighEndSteeringFullLockAngle: ");
        stringBuilder.append(this.au);
        stringBuilder.append("\nsteeringChangeRate: ");
        stringBuilder.append(this.aj);
        stringBuilder.append("\nmaximumBrakingForce: ");
        stringBuilder.append(this.ak);
        stringBuilder.append("\ncentreOfMassOffset: ");
        stringBuilder.append(this.ay);
        stringBuilder.append("\ncentreOfShapeOffset: ");
        stringBuilder.append(this.ad);
        stringBuilder.append("\ncentreOfWheelsOffset: ");
        stringBuilder.append(this.ae);
        stringBuilder.append("\nmiddleWheelOffsetFromRear: ");
        stringBuilder.append(this.bd);
        stringBuilder.append("\ngraphicsPivotOffset: ");
        stringBuilder.append(this.bm);
        stringBuilder.append("\nleftWheelPretransformZangle: ");
        stringBuilder.append(this.bq);
        stringBuilder.append("\nrightWheelPretransformZangle: ");
        stringBuilder.append(this.bo);
        stringBuilder.append("\nfrontAxlePretransformXangle: ");
        stringBuilder.append(this.bl);
        stringBuilder.append("\nfrontAxlePretransformYangle: ");
        stringBuilder.append(this.bw);
        stringBuilder.append("\nrearAxlePretransformXangle: ");
        stringBuilder.append(this.bj);
        stringBuilder.append("\nrearAxlePretransformYangle: ");
        stringBuilder.append(this.bk);
        stringBuilder.append("\nsteeringScale: ");
        stringBuilder.append(this.bh);
        stringBuilder.append("\nforkLeanAngle: ");
        stringBuilder.append(this.bp);
        stringBuilder.append("\nmassScaleForContactResolution: ");
        stringBuilder.append(this.bx);
        stringBuilder.append("\ninertiaScaleForContactResolution: ");
        stringBuilder.append(this.by);
        stringBuilder.append("\nmaxLinearVelocity: ");
        stringBuilder.append(this.br);
        stringBuilder.append("\nmaxAngularVelocity: ");
        stringBuilder.append(this.bv);
        stringBuilder.append("\nbikeLeanAmount: ");
        stringBuilder.append(this.bf);
        stringBuilder.append("\nlocalAngularDampings: ");
        stringBuilder.append(this.bn);
        stringBuilder.append("\norientationCorrectionLimits: ");
        stringBuilder.append(this.bi);
        stringBuilder.append("\norientationCorrectionLimits_hard: ");
        stringBuilder.append(this.bt);
        stringBuilder.append("\nblendSpeedToVertical_01: ");
        stringBuilder.append(this.bz);
        stringBuilder.append("\nblendSpeedToSurface_01: ");
        stringBuilder.append(this.bc);
        stringBuilder.append("\nlocalAdditionalLAngularDampingsOutsideLimits: ");
        stringBuilder.append(this.bg);
        stringBuilder.append("\nlocalAdditionalLAngularDampingsOutsideLimits_hard: ");
        stringBuilder.append(this.bu);
        stringBuilder.append("\norientationCorrectionStrengths: ");
        stringBuilder.append(this.bb);
        stringBuilder.append("\norientationCorrectionStrengths_hard: ");
        stringBuilder.append(this.ba);
        stringBuilder.append("\noextraAngularPitchVelocityOnTransformation: ");
        stringBuilder.append(this.be);
        stringBuilder.append("--------\n");
        return stringBuilder.toString();
    }

    public B45() {
        this.af = new ArrayList();
        this.av = new ArrayList();
        this.g = 4;
        this.d = 10.0f;
        this.q = 1.3f;
        this.j = 1.3f;
        this.h = 0.6f;
        this.s = 30.0f;
        this.b = 100.0f;
        this.e = 600000.0f;
        this.l = 5.0f;
        this.w = 3.0f;
        this.r = 1.0f;
        this.v = 3.0f;
        this.y = 2.0f;
        this.p = 1.0f;
        this.x = 0.5f;
        this.u = 0.4f;
        this.z = 0.1f;
        this.t = 0.0f;
        this.m = 0.2f;
        this.n = 0.1f;
        this.k = 0.0f;
        this.i = 0.2f;
        this.o = 0.1f;
        this.a = 0.8f;
        this.f = -0.3f;
        this.c = 1.5f;
        this.az = 40.0f;
        this.ah = 10.0f;
        this.ag = 750000.0f;
        this.ai.clear();
        this.al.clear();
        this.af.clear();
        this.av.clear();
        this.aq = 1.0f;
        this.ap = true;
        this.ao = true;
        this.aa = true;
        this.an = true;
        this.am = true;
        this.as = true;
        this.ac = 0.0f;
        this.at = 0.5f;
        this.ab = 1.5f;
        this.aw = 1.0f;
        this.ar = 0.6f;
        this.ax = 25.0f;
        this.au = 0.3f;
        this.aj = 1.0f;
        this.ak = 1.0f;
        this.ay = Vector3.g;
        this.ad = Vector3.g;
        this.ae = Vector3.g;
        this.bd = 0.0f;
        this.bm = Vector3.g;
        this.bq = -4.712389f;
        this.bo = -1.5707964f;
        this.bl = -1.5707964f;
        this.bw = -3.1415927f;
        this.bj = -0.7853982f;
        this.bk = 0.0f;
        this.bh = 1.0f;
        this.bp = 0.0f;
        this.bx = 1.0f;
        this.by = 1.0f;
        this.br = 1.0E10f;
        this.bv = 1.0E10f;
        this.bf = Float.NaN;
        this.bn = Vector3.g;
        this.bb = Vector3.g;
        this.ba = Vector3.g;
        this.bi = Vector3.g;
        this.bt = Vector3.g;
        this.bz = 0.2f;
        this.bc = 0.9f;
        this.bg = Vector3.g;
        this.bu = Vector3.g;
        this.be = 0.0f;
    }
}

